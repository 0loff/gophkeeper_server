// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.3.0
// - protoc             v4.25.3
// source: proto/gophkeeper.proto

package proto

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

const (
	Gophkeeper_UserAuth_FullMethodName        = "/gophkeeper.Gophkeeper/UserAuth"
	Gophkeeper_UserLogin_FullMethodName       = "/gophkeeper.Gophkeeper/UserLogin"
	Gophkeeper_UserdataGet_FullMethodName     = "/gophkeeper.Gophkeeper/UserdataGet"
	Gophkeeper_TextdataCreate_FullMethodName  = "/gophkeeper.Gophkeeper/TextdataCreate"
	Gophkeeper_TextdataUpdate_FullMethodName  = "/gophkeeper.Gophkeeper/TextdataUpdate"
	Gophkeeper_TextdataGet_FullMethodName     = "/gophkeeper.Gophkeeper/TextdataGet"
	Gophkeeper_CredsdataCreate_FullMethodName = "/gophkeeper.Gophkeeper/CredsdataCreate"
	Gophkeeper_CredsdataGet_FullMethodName    = "/gophkeeper.Gophkeeper/CredsdataGet"
	Gophkeeper_CredsdataUpdate_FullMethodName = "/gophkeeper.Gophkeeper/CredsdataUpdate"
	Gophkeeper_CardsdataCreate_FullMethodName = "/gophkeeper.Gophkeeper/CardsdataCreate"
	Gophkeeper_CardsdataGet_FullMethodName    = "/gophkeeper.Gophkeeper/CardsdataGet"
	Gophkeeper_CardsdataUpdate_FullMethodName = "/gophkeeper.Gophkeeper/CardsdataUpdate"
	Gophkeeper_BindataCreate_FullMethodName   = "/gophkeeper.Gophkeeper/BindataCreate"
	Gophkeeper_BindataGet_FullMethodName      = "/gophkeeper.Gophkeeper/BindataGet"
	Gophkeeper_BindataUpdate_FullMethodName   = "/gophkeeper.Gophkeeper/BindataUpdate"
)

// GophkeeperClient is the client API for Gophkeeper service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type GophkeeperClient interface {
	UserAuth(ctx context.Context, in *UserAuthRequest, opts ...grpc.CallOption) (*emptypb.Empty, error)
	UserLogin(ctx context.Context, in *UserLoginRequest, opts ...grpc.CallOption) (*emptypb.Empty, error)
	UserdataGet(ctx context.Context, in *emptypb.Empty, opts ...grpc.CallOption) (*UserdataGetResponse, error)
	TextdataCreate(ctx context.Context, in *TextDataStoreRequest, opts ...grpc.CallOption) (*CallbackStatusResponse, error)
	TextdataUpdate(ctx context.Context, in *TextDataUpdateRequest, opts ...grpc.CallOption) (*CallbackStatusResponse, error)
	TextdataGet(ctx context.Context, in *emptypb.Empty, opts ...grpc.CallOption) (*TextdataEntriesResponse, error)
	CredsdataCreate(ctx context.Context, in *CredsdataStoreRequest, opts ...grpc.CallOption) (*CallbackStatusResponse, error)
	CredsdataGet(ctx context.Context, in *emptypb.Empty, opts ...grpc.CallOption) (*CredsdataEntriesResponse, error)
	CredsdataUpdate(ctx context.Context, in *CredsdataUpdateRequest, opts ...grpc.CallOption) (*CallbackStatusResponse, error)
	CardsdataCreate(ctx context.Context, in *CardsdataStoreRequest, opts ...grpc.CallOption) (*CallbackStatusResponse, error)
	CardsdataGet(ctx context.Context, in *emptypb.Empty, opts ...grpc.CallOption) (*CardsdataEntriesResponse, error)
	CardsdataUpdate(ctx context.Context, in *CardsdataUpdateRequest, opts ...grpc.CallOption) (*CallbackStatusResponse, error)
	BindataCreate(ctx context.Context, in *BindataStoreRequest, opts ...grpc.CallOption) (*CallbackStatusResponse, error)
	BindataGet(ctx context.Context, in *emptypb.Empty, opts ...grpc.CallOption) (*BindataEntriesResponse, error)
	BindataUpdate(ctx context.Context, in *BindataUpdateRequest, opts ...grpc.CallOption) (*CallbackStatusResponse, error)
}

type gophkeeperClient struct {
	cc grpc.ClientConnInterface
}

func NewGophkeeperClient(cc grpc.ClientConnInterface) GophkeeperClient {
	return &gophkeeperClient{cc}
}

func (c *gophkeeperClient) UserAuth(ctx context.Context, in *UserAuthRequest, opts ...grpc.CallOption) (*emptypb.Empty, error) {
	out := new(emptypb.Empty)
	err := c.cc.Invoke(ctx, Gophkeeper_UserAuth_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *gophkeeperClient) UserLogin(ctx context.Context, in *UserLoginRequest, opts ...grpc.CallOption) (*emptypb.Empty, error) {
	out := new(emptypb.Empty)
	err := c.cc.Invoke(ctx, Gophkeeper_UserLogin_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *gophkeeperClient) UserdataGet(ctx context.Context, in *emptypb.Empty, opts ...grpc.CallOption) (*UserdataGetResponse, error) {
	out := new(UserdataGetResponse)
	err := c.cc.Invoke(ctx, Gophkeeper_UserdataGet_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *gophkeeperClient) TextdataCreate(ctx context.Context, in *TextDataStoreRequest, opts ...grpc.CallOption) (*CallbackStatusResponse, error) {
	out := new(CallbackStatusResponse)
	err := c.cc.Invoke(ctx, Gophkeeper_TextdataCreate_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *gophkeeperClient) TextdataUpdate(ctx context.Context, in *TextDataUpdateRequest, opts ...grpc.CallOption) (*CallbackStatusResponse, error) {
	out := new(CallbackStatusResponse)
	err := c.cc.Invoke(ctx, Gophkeeper_TextdataUpdate_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *gophkeeperClient) TextdataGet(ctx context.Context, in *emptypb.Empty, opts ...grpc.CallOption) (*TextdataEntriesResponse, error) {
	out := new(TextdataEntriesResponse)
	err := c.cc.Invoke(ctx, Gophkeeper_TextdataGet_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *gophkeeperClient) CredsdataCreate(ctx context.Context, in *CredsdataStoreRequest, opts ...grpc.CallOption) (*CallbackStatusResponse, error) {
	out := new(CallbackStatusResponse)
	err := c.cc.Invoke(ctx, Gophkeeper_CredsdataCreate_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *gophkeeperClient) CredsdataGet(ctx context.Context, in *emptypb.Empty, opts ...grpc.CallOption) (*CredsdataEntriesResponse, error) {
	out := new(CredsdataEntriesResponse)
	err := c.cc.Invoke(ctx, Gophkeeper_CredsdataGet_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *gophkeeperClient) CredsdataUpdate(ctx context.Context, in *CredsdataUpdateRequest, opts ...grpc.CallOption) (*CallbackStatusResponse, error) {
	out := new(CallbackStatusResponse)
	err := c.cc.Invoke(ctx, Gophkeeper_CredsdataUpdate_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *gophkeeperClient) CardsdataCreate(ctx context.Context, in *CardsdataStoreRequest, opts ...grpc.CallOption) (*CallbackStatusResponse, error) {
	out := new(CallbackStatusResponse)
	err := c.cc.Invoke(ctx, Gophkeeper_CardsdataCreate_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *gophkeeperClient) CardsdataGet(ctx context.Context, in *emptypb.Empty, opts ...grpc.CallOption) (*CardsdataEntriesResponse, error) {
	out := new(CardsdataEntriesResponse)
	err := c.cc.Invoke(ctx, Gophkeeper_CardsdataGet_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *gophkeeperClient) CardsdataUpdate(ctx context.Context, in *CardsdataUpdateRequest, opts ...grpc.CallOption) (*CallbackStatusResponse, error) {
	out := new(CallbackStatusResponse)
	err := c.cc.Invoke(ctx, Gophkeeper_CardsdataUpdate_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *gophkeeperClient) BindataCreate(ctx context.Context, in *BindataStoreRequest, opts ...grpc.CallOption) (*CallbackStatusResponse, error) {
	out := new(CallbackStatusResponse)
	err := c.cc.Invoke(ctx, Gophkeeper_BindataCreate_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *gophkeeperClient) BindataGet(ctx context.Context, in *emptypb.Empty, opts ...grpc.CallOption) (*BindataEntriesResponse, error) {
	out := new(BindataEntriesResponse)
	err := c.cc.Invoke(ctx, Gophkeeper_BindataGet_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *gophkeeperClient) BindataUpdate(ctx context.Context, in *BindataUpdateRequest, opts ...grpc.CallOption) (*CallbackStatusResponse, error) {
	out := new(CallbackStatusResponse)
	err := c.cc.Invoke(ctx, Gophkeeper_BindataUpdate_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// GophkeeperServer is the server API for Gophkeeper service.
// All implementations must embed UnimplementedGophkeeperServer
// for forward compatibility
type GophkeeperServer interface {
	UserAuth(context.Context, *UserAuthRequest) (*emptypb.Empty, error)
	UserLogin(context.Context, *UserLoginRequest) (*emptypb.Empty, error)
	UserdataGet(context.Context, *emptypb.Empty) (*UserdataGetResponse, error)
	TextdataCreate(context.Context, *TextDataStoreRequest) (*CallbackStatusResponse, error)
	TextdataUpdate(context.Context, *TextDataUpdateRequest) (*CallbackStatusResponse, error)
	TextdataGet(context.Context, *emptypb.Empty) (*TextdataEntriesResponse, error)
	CredsdataCreate(context.Context, *CredsdataStoreRequest) (*CallbackStatusResponse, error)
	CredsdataGet(context.Context, *emptypb.Empty) (*CredsdataEntriesResponse, error)
	CredsdataUpdate(context.Context, *CredsdataUpdateRequest) (*CallbackStatusResponse, error)
	CardsdataCreate(context.Context, *CardsdataStoreRequest) (*CallbackStatusResponse, error)
	CardsdataGet(context.Context, *emptypb.Empty) (*CardsdataEntriesResponse, error)
	CardsdataUpdate(context.Context, *CardsdataUpdateRequest) (*CallbackStatusResponse, error)
	BindataCreate(context.Context, *BindataStoreRequest) (*CallbackStatusResponse, error)
	BindataGet(context.Context, *emptypb.Empty) (*BindataEntriesResponse, error)
	BindataUpdate(context.Context, *BindataUpdateRequest) (*CallbackStatusResponse, error)
	mustEmbedUnimplementedGophkeeperServer()
}

// UnimplementedGophkeeperServer must be embedded to have forward compatible implementations.
type UnimplementedGophkeeperServer struct {
}

func (UnimplementedGophkeeperServer) UserAuth(context.Context, *UserAuthRequest) (*emptypb.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UserAuth not implemented")
}
func (UnimplementedGophkeeperServer) UserLogin(context.Context, *UserLoginRequest) (*emptypb.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UserLogin not implemented")
}
func (UnimplementedGophkeeperServer) UserdataGet(context.Context, *emptypb.Empty) (*UserdataGetResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UserdataGet not implemented")
}
func (UnimplementedGophkeeperServer) TextdataCreate(context.Context, *TextDataStoreRequest) (*CallbackStatusResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method TextdataCreate not implemented")
}
func (UnimplementedGophkeeperServer) TextdataUpdate(context.Context, *TextDataUpdateRequest) (*CallbackStatusResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method TextdataUpdate not implemented")
}
func (UnimplementedGophkeeperServer) TextdataGet(context.Context, *emptypb.Empty) (*TextdataEntriesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method TextdataGet not implemented")
}
func (UnimplementedGophkeeperServer) CredsdataCreate(context.Context, *CredsdataStoreRequest) (*CallbackStatusResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CredsdataCreate not implemented")
}
func (UnimplementedGophkeeperServer) CredsdataGet(context.Context, *emptypb.Empty) (*CredsdataEntriesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CredsdataGet not implemented")
}
func (UnimplementedGophkeeperServer) CredsdataUpdate(context.Context, *CredsdataUpdateRequest) (*CallbackStatusResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CredsdataUpdate not implemented")
}
func (UnimplementedGophkeeperServer) CardsdataCreate(context.Context, *CardsdataStoreRequest) (*CallbackStatusResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CardsdataCreate not implemented")
}
func (UnimplementedGophkeeperServer) CardsdataGet(context.Context, *emptypb.Empty) (*CardsdataEntriesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CardsdataGet not implemented")
}
func (UnimplementedGophkeeperServer) CardsdataUpdate(context.Context, *CardsdataUpdateRequest) (*CallbackStatusResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CardsdataUpdate not implemented")
}
func (UnimplementedGophkeeperServer) BindataCreate(context.Context, *BindataStoreRequest) (*CallbackStatusResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method BindataCreate not implemented")
}
func (UnimplementedGophkeeperServer) BindataGet(context.Context, *emptypb.Empty) (*BindataEntriesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method BindataGet not implemented")
}
func (UnimplementedGophkeeperServer) BindataUpdate(context.Context, *BindataUpdateRequest) (*CallbackStatusResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method BindataUpdate not implemented")
}
func (UnimplementedGophkeeperServer) mustEmbedUnimplementedGophkeeperServer() {}

// UnsafeGophkeeperServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to GophkeeperServer will
// result in compilation errors.
type UnsafeGophkeeperServer interface {
	mustEmbedUnimplementedGophkeeperServer()
}

func RegisterGophkeeperServer(s grpc.ServiceRegistrar, srv GophkeeperServer) {
	s.RegisterService(&Gophkeeper_ServiceDesc, srv)
}

func _Gophkeeper_UserAuth_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UserAuthRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GophkeeperServer).UserAuth(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: Gophkeeper_UserAuth_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GophkeeperServer).UserAuth(ctx, req.(*UserAuthRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Gophkeeper_UserLogin_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UserLoginRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GophkeeperServer).UserLogin(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: Gophkeeper_UserLogin_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GophkeeperServer).UserLogin(ctx, req.(*UserLoginRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Gophkeeper_UserdataGet_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(emptypb.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GophkeeperServer).UserdataGet(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: Gophkeeper_UserdataGet_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GophkeeperServer).UserdataGet(ctx, req.(*emptypb.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _Gophkeeper_TextdataCreate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TextDataStoreRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GophkeeperServer).TextdataCreate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: Gophkeeper_TextdataCreate_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GophkeeperServer).TextdataCreate(ctx, req.(*TextDataStoreRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Gophkeeper_TextdataUpdate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TextDataUpdateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GophkeeperServer).TextdataUpdate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: Gophkeeper_TextdataUpdate_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GophkeeperServer).TextdataUpdate(ctx, req.(*TextDataUpdateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Gophkeeper_TextdataGet_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(emptypb.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GophkeeperServer).TextdataGet(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: Gophkeeper_TextdataGet_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GophkeeperServer).TextdataGet(ctx, req.(*emptypb.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _Gophkeeper_CredsdataCreate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CredsdataStoreRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GophkeeperServer).CredsdataCreate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: Gophkeeper_CredsdataCreate_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GophkeeperServer).CredsdataCreate(ctx, req.(*CredsdataStoreRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Gophkeeper_CredsdataGet_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(emptypb.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GophkeeperServer).CredsdataGet(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: Gophkeeper_CredsdataGet_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GophkeeperServer).CredsdataGet(ctx, req.(*emptypb.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _Gophkeeper_CredsdataUpdate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CredsdataUpdateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GophkeeperServer).CredsdataUpdate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: Gophkeeper_CredsdataUpdate_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GophkeeperServer).CredsdataUpdate(ctx, req.(*CredsdataUpdateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Gophkeeper_CardsdataCreate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CardsdataStoreRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GophkeeperServer).CardsdataCreate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: Gophkeeper_CardsdataCreate_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GophkeeperServer).CardsdataCreate(ctx, req.(*CardsdataStoreRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Gophkeeper_CardsdataGet_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(emptypb.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GophkeeperServer).CardsdataGet(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: Gophkeeper_CardsdataGet_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GophkeeperServer).CardsdataGet(ctx, req.(*emptypb.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _Gophkeeper_CardsdataUpdate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CardsdataUpdateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GophkeeperServer).CardsdataUpdate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: Gophkeeper_CardsdataUpdate_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GophkeeperServer).CardsdataUpdate(ctx, req.(*CardsdataUpdateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Gophkeeper_BindataCreate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(BindataStoreRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GophkeeperServer).BindataCreate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: Gophkeeper_BindataCreate_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GophkeeperServer).BindataCreate(ctx, req.(*BindataStoreRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Gophkeeper_BindataGet_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(emptypb.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GophkeeperServer).BindataGet(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: Gophkeeper_BindataGet_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GophkeeperServer).BindataGet(ctx, req.(*emptypb.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _Gophkeeper_BindataUpdate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(BindataUpdateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GophkeeperServer).BindataUpdate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: Gophkeeper_BindataUpdate_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GophkeeperServer).BindataUpdate(ctx, req.(*BindataUpdateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

// Gophkeeper_ServiceDesc is the grpc.ServiceDesc for Gophkeeper service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var Gophkeeper_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "gophkeeper.Gophkeeper",
	HandlerType: (*GophkeeperServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "UserAuth",
			Handler:    _Gophkeeper_UserAuth_Handler,
		},
		{
			MethodName: "UserLogin",
			Handler:    _Gophkeeper_UserLogin_Handler,
		},
		{
			MethodName: "UserdataGet",
			Handler:    _Gophkeeper_UserdataGet_Handler,
		},
		{
			MethodName: "TextdataCreate",
			Handler:    _Gophkeeper_TextdataCreate_Handler,
		},
		{
			MethodName: "TextdataUpdate",
			Handler:    _Gophkeeper_TextdataUpdate_Handler,
		},
		{
			MethodName: "TextdataGet",
			Handler:    _Gophkeeper_TextdataGet_Handler,
		},
		{
			MethodName: "CredsdataCreate",
			Handler:    _Gophkeeper_CredsdataCreate_Handler,
		},
		{
			MethodName: "CredsdataGet",
			Handler:    _Gophkeeper_CredsdataGet_Handler,
		},
		{
			MethodName: "CredsdataUpdate",
			Handler:    _Gophkeeper_CredsdataUpdate_Handler,
		},
		{
			MethodName: "CardsdataCreate",
			Handler:    _Gophkeeper_CardsdataCreate_Handler,
		},
		{
			MethodName: "CardsdataGet",
			Handler:    _Gophkeeper_CardsdataGet_Handler,
		},
		{
			MethodName: "CardsdataUpdate",
			Handler:    _Gophkeeper_CardsdataUpdate_Handler,
		},
		{
			MethodName: "BindataCreate",
			Handler:    _Gophkeeper_BindataCreate_Handler,
		},
		{
			MethodName: "BindataGet",
			Handler:    _Gophkeeper_BindataGet_Handler,
		},
		{
			MethodName: "BindataUpdate",
			Handler:    _Gophkeeper_BindataUpdate_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "proto/gophkeeper.proto",
}
